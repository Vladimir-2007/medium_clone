import React, {useContext, useEffect} from 'react'
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'context/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {

  const [{response}, doFetch] = useFetch('/user')
  // const [state, setCurrentUserState] = useContext(CurrentUserContext)
  const [state, dispatch] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('mcv_token')

  useEffect(() => {
    if (!token) {
      // setCurrentUserState(state => ({
      //   ...state,
      //   isLoggedIn: false
      // }))
      dispatch({type: 'SET_UNAUTHORIZED'})
      return
    }
    doFetch()
    // setCurrentUserState(state => ({
    //   ...state,
    //   isLoading: true
    // }))
    dispatch({type: 'LOADING'})
  }, [token,doFetch, dispatch])

  useEffect(() => {
    if (!response) {
      return
    }

    // setCurrentUserState(state => ({
    //   ...state,
    //   isLoggedIn: true,
    //   isLoading: false,
    //   currentUser: response.user
    // }))
    dispatch({type: 'SET_AUTHORIZED', payload: response.user})

  }, [response, dispatch])

  return children
}

export default CurrentUserChecker